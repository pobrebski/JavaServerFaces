package pl.com.mnemonic.entities;
// default package
// Generated 2015-04-12 11:10:53 by Hibernate Tools 4.0.0

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Bindrole generated by hbm2java
 */
@Entity
@Table(name = "bindrole", catalog = "renting")
public class Bindrole implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Integer idbindrole;
	private User user;
	private Role role;
	private Set<Refueling> refuelings = new HashSet<Refueling>(0);
	private Set<Rent> rents = new HashSet<Rent>(0);

	public Bindrole() {
	}

	public Bindrole(User user, Role role) {
		this.user = user;
		this.role = role;
	}

	public Bindrole(User user, Role role, Set<Refueling> refuelings,
			Set<Rent> rents) {
		this.user = user;
		this.role = role;
		this.refuelings = refuelings;
		this.rents = rents;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "idbindrole", unique = true, nullable = false)
	public Integer getIdbindrole() {
		return this.idbindrole;
	}

	public void setIdbindrole(Integer idbindrole) {
		this.idbindrole = idbindrole;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "user_iduser", nullable = false)
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "role_idrole", nullable = false)
	public Role getRole() {
		return this.role;
	}

	public void setRole(Role role) {
		this.role = role;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "bindrole")
	public Set<Refueling> getRefuelings() {
		return this.refuelings;
	}

	public void setRefuelings(Set<Refueling> refuelings) {
		this.refuelings = refuelings;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "bindrole")
	public Set<Rent> getRents() {
		return this.rents;
	}

	public void setRents(Set<Rent> rents) {
		this.rents = rents;
	}

}
